pipeline {
    agent any

    parameters {
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically apply without manual approval')
        choice(name: 'action', choices: ['apply', 'destroy'], description: 'Terraform action to perform')
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION    = 'us-east-1'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/CodeSagarOfficial/jenkins-scripts.git'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('ec2') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('ec2') {
                    sh 'terraform plan -out=tfplan'
                    sh 'terraform show -no-color tfplan > tfplan.txt'
                }
            }
        }

        stage('Apply or Destroy') {
            steps {
                script {
                    dir('ec2') {
                        if (params.action == 'apply') {
                            if (!params.autoApprove) {
                                def plan = readFile 'tfplan.txt'
                                input message: "Apply this Terraform plan?",
                                parameters: [text(name: 'Plan', description: 'Review the plan', defaultValue: plan)]
                            }
                            sh 'terraform apply -input=false tfplan'
                            echo "EC2 Instance has been created successfully!"
                        } else if (params.action == 'destroy') {
                            sh 'terraform destroy --auto-approve'
                            echo "EC2 Instance has been destroyed successfully!"
                        } else {
                            error "Invalid action selected!"
                        }
                    }
                }
            }
        }
    }
}
